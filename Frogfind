<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FrogFind - Identificação de Sapos</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #e0f2f7; /* Light blue background */
        }
        .container {
            max-width: 960px;
        }
        .card {
            background-color: #ffffff;
            border-radius: 1.5rem; /* Rounded corners */
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        .btn-primary {
            background-color: #4CAF50; /* Green */
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            transition: background-color 0.3s ease;
        }
        .btn-primary:hover {
            background-color: #45a049;
        }
        .btn-secondary {
            background-color: #2196F3; /* Blue */
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            transition: background-color 0.3s ease;
        }
        .btn-secondary:hover {
            background-color: #1976D2;
        }
        .input-field {
            border: 1px solid #cbd5e0;
            border-radius: 0.5rem;
            padding: 0.75rem 1rem;
            width: 100%;
        }
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1000; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            width: 80%;
            max-width: 500px;
            text-align: center;
        }
        .close-button {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close-button:hover,
        .close-button:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col items-center py-8">

    <div id="loading-overlay" class="fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50 hidden">
        <div class="flex flex-col items-center text-white">
            <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white"></div>
            <p class="mt-4 text-lg">Carregando...</p>
        </div>
    </div>

    <div class="container mx-auto p-4 flex flex-col items-center">
        <h1 class="text-4xl font-bold text-gray-800 mb-8 text-center">FrogFind</h1>

        <div id="user-id-display" class="bg-gray-100 p-3 rounded-lg text-sm text-gray-600 mb-6 hidden">
            Seu ID de Usuário: <span id="current-user-id" class="font-mono text-gray-700"></span>
        </div>

        <div id="main-content" class="w-full card p-8">
            <div id="home-screen" class="text-center">
                <h2 class="text-3xl font-semibold text-gray-700 mb-6">Bem-vindo ao FrogFind!</h2>
                <p class="text-lg text-gray-600 mb-8">Seu guia para identificar sapos, rãs e pererecas.</p>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <button class="flex flex-col items-center p-6 bg-green-500 text-white rounded-xl shadow-lg hover:bg-green-600 transition-all duration-300 transform hover:scale-105" onclick="showSection('identify-screen')">
                        <i class="fas fa-camera text-4xl mb-3"></i>
                        <span class="text-xl font-medium">Identificar Sapo</span>
                    </button>
                    <button class="flex flex-col items-center p-6 bg-blue-500 text-white rounded-xl shadow-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105" onclick="showSection('journal-screen')">
                        <i class="fas fa-book text-4xl mb-3"></i>
                        <span class="text-xl font-medium">Meu Diário</span>
                    </button>
                    <button class="flex flex-col items-center p-6 bg-purple-500 text-white rounded-xl shadow-lg hover:bg-purple-600 transition-all duration-300 transform hover:scale-105" onclick="showSection('explore-screen')">
                        <i class="fas fa-globe-americas text-4xl mb-3"></i>
                        <span class="text-xl font-medium">Explorar Espécies</span>
                    </button>
                </div>
            </div>

            <div id="identify-screen" class="hidden text-center">
                <h2 class="text-3xl font-semibold text-gray-700 mb-6">Identificar Sapo</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                    <div class="p-6 bg-green-100 rounded-xl shadow-md">
                        <h3 class="text-2xl font-medium text-gray-800 mb-4">Por Imagem</h3>
                        <p class="text-gray-600 mb-4">Envie uma foto do sapo para identificação.</p>
                        <input type="file" id="image-upload" accept="image/*" class="hidden">
                        <button class="btn-primary w-full" onclick="document.getElementById('image-upload').click()">
                            <i class="fas fa-upload mr-2"></i> Carregar Imagem
                        </button>
                        <div id="image-preview-container" class="mt-4 hidden">
                            <img id="image-preview" src="#" alt="Pré-visualização da Imagem" class="w-full h-48 object-cover rounded-lg mb-4">
                            <p class="text-gray-700 font-semibold">Espécie Identificada (Simulação):</p>
                            <p id="identified-species" class="text-green-700 text-xl font-bold">Rã-touro (Lithobates catesbeianus)</p>
                            <button class="btn-secondary mt-4" onclick="showModal('confirm-sighting-modal', 'Rã-touro (Lithobates catesbeianus)')">
                                <i class="fas fa-save mr-2"></i> Salvar Avistamento
                            </button>
                        </div>
                    </div>
                    <div class="p-6 bg-blue-100 rounded-xl shadow-md">
                        <h3 class="text-2xl font-medium text-gray-800 mb-4">Por Áudio</h3>
                        <p class="text-gray-600 mb-4">Grave o coaxar do sapo para identificação.</p>
                        <button id="record-audio-btn" class="btn-secondary w-full">
                            <i class="fas fa-microphone mr-2"></i> Gravar Áudio
                        </button>
                        <div id="audio-result-container" class="mt-4 hidden">
                            <p class="text-gray-700 font-semibold">Espécie Identificada (Simulação):</p>
                            <p id="identified-audio-species" class="text-blue-700 text-xl font-bold">Perereca-macaco (Phyllomedusa sauvagii)</p>
                            <button class="btn-secondary mt-4" onclick="showModal('confirm-sighting-modal', 'Perereca-macaco (Phyllomedusa sauvagii)')">
                                <i class="fas fa-save mr-2"></i> Salvar Avistamento
                            </button>
                        </div>
                    </div>
                </div>
                <button class="btn-secondary mt-4" onclick="showSection('home-screen')">
                    <i class="fas fa-arrow-left mr-2"></i> Voltar
                </button>
            </div>

            <div id="journal-screen" class="hidden">
                <h2 class="text-3xl font-semibold text-gray-700 mb-6 text-center">Meu Diário de Avistamentos</h2>
                <div id="sightings-list" class="space-y-4 mb-6">
                    <p id="no-sightings-message" class="text-gray-500 text-center">Nenhum avistamento registrado ainda.</p>
                </div>
                <button class="btn-secondary mt-4" onclick="showSection('home-screen')">
                    <i class="fas fa-arrow-left mr-2"></i> Voltar
                </button>
            </div>

            <div id="explore-screen" class="hidden text-center">
                <h2 class="text-3xl font-semibold text-gray-700 mb-6">Explorar Espécies</h2>
                <p class="text-lg text-gray-600 mb-8">Aqui você poderá navegar por todas as espécies de sapos, rãs e pererecas.</p>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <div class="p-6 bg-gray-100 rounded-xl shadow-md">
                        <img src="https://placehold.co/150x100/A8DADC/2C3E50?text=Sapo" alt="Sapo Genérico" class="mx-auto rounded-lg mb-4">
                        <h3 class="text-xl font-medium text-gray-800">Sapo Cururu</h3>
                        <p class="text-gray-600 text-sm">Rhinella marina</p>
                    </div>
                    <div class="p-6 bg-gray-100 rounded-xl shadow-md">
                        <img src="https://placehold.co/150x100/D4A5A5/2C3E50?text=Rã" alt="Rã Genérica" class="mx-auto rounded-lg mb-4">
                        <h3 class="text-xl font-medium text-gray-800">Rã-touro</h3>
                        <p class="text-gray-600 text-sm">Lithobates catesbeianus</p>
                    </div>
                    <div class="p-6 bg-gray-100 rounded-xl shadow-md">
                        <img src="https://placehold.co/150x100/C3B1E1/2C3E50?text=Perereca" alt="Perereca Genérica" class="mx-auto rounded-lg mb-4">
                        <h3 class="text-xl font-medium text-gray-800">Perereca-de-vidro</h3>
                        <p class="text-gray-600 text-sm">Hyalinobatrachium pellucidum</p>
                    </div>
                </div>
                <button class="btn-secondary mt-8" onclick="showSection('home-screen')">
                    <i class="fas fa-arrow-left mr-2"></i> Voltar
                </button>
            </div>
        </div>
    </div>

    <div id="confirm-sighting-modal" class="modal">
        <div class="modal-content">
            <span class="close-button" onclick="closeModal('confirm-sighting-modal')">&times;</span>
            <h3 class="text-2xl font-semibold mb-4">Confirmar Avistamento</h3>
            <p class="text-lg mb-4">Deseja salvar o avistamento de <span id="modal-species-name" class="font-bold"></span>?</p>
            <input type="text" id="sighting-location" placeholder="Localização (opcional)" class="input-field mb-4">
            <button class="btn-primary w-full" onclick="saveSighting()">Salvar</button>
        </div>
    </div>

    <div id="message-modal" class="modal">
        <div class="modal-content">
            <span class="close-button" onclick="closeModal('message-modal')">&times;</span>
            <h3 id="message-modal-title" class="text-2xl font-semibold mb-4"></h3>
            <p id="message-modal-text" class="text-lg mb-4"></p>
            <button class="btn-primary w-full" onclick="closeModal('message-modal')">OK</button>
        </div>
    </div>

    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import { getFirestore, doc, collection, addDoc, onSnapshot, query, orderBy } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        let app;
        let db;
        let auth;
        let userId = 'anonymous'; // Default to anonymous
        let isAuthReady = false; // Flag to indicate if auth state is ready

        // Global variables from Canvas environment
        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
        const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : null;
        const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;

        // Function to show loading overlay
        function showLoading() {
            document.getElementById('loading-overlay').classList.remove('hidden');
        }

        // Function to hide loading overlay
        function hideLoading() {
            document.getElementById('loading-overlay').classList.add('hidden');
        }

        // Initialize Firebase and set up auth listener
        async function initializeFirebase() {
            showLoading();
            try {
                if (firebaseConfig) {
                    app = initializeApp(firebaseConfig);
                    db = getFirestore(app);
                    auth = getAuth(app);

                    onAuthStateChanged(auth, async (user) => {
                        if (user) {
                            userId = user.uid;
                            document.getElementById('current-user-id').textContent = userId;
                            document.getElementById('user-id-display').classList.remove('hidden');
                            console.log("Usuário autenticado:", userId);
                            isAuthReady = true;
                            // Only fetch sightings once auth is ready
                            await fetchSightings();
                        } else {
                            // Sign in anonymously if no token or user
                            if (initialAuthToken) {
                                await signInWithCustomToken(auth, initialAuthToken);
                            } else {
                                await signInAnonymously(auth);
                            }
                            isAuthReady = true;
                        }
                        hideLoading();
                    });
                } else {
                    console.error("Firebase config not found. Running in limited mode.");
                    hideLoading();
                }
            } catch (error) {
                console.error("Erro ao inicializar Firebase:", error);
                showMessageModal("Erro", "Não foi possível conectar ao Firebase. Algumas funcionalidades podem estar limitadas.");
                hideLoading();
            }
        }

        // Call initialize Firebase on window load
        window.onload = initializeFirebase;

        // Function to show different sections
        window.showSection = function(sectionId) {
            const sections = ['home-screen', 'identify-screen', 'journal-screen', 'explore-screen'];
            sections.forEach(id => {
                document.getElementById(id).classList.add('hidden');
            });
            document.getElementById(sectionId).classList.remove('hidden');

            // If navigating to journal, ensure sightings are fetched/updated
            if (sectionId === 'journal-screen' && isAuthReady) {
                fetchSightings();
            }
        };

        // Handle image upload simulation
        document.getElementById('image-upload').addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('image-preview').src = e.target.result;
                    document.getElementById('image-preview-container').classList.remove('hidden');
                    // Simulate identification result
                    document.getElementById('identified-species').textContent = "Rã-touro (Lithobates catesbeianus)";
                };
                reader.readAsDataURL(file);
            }
        });

        // Handle audio recording simulation
        document.getElementById('record-audio-btn').addEventListener('click', function() {
            this.textContent = "Gravando... (Simulação)";
            this.disabled = true;
            setTimeout(() => {
                this.textContent = "Gravar Áudio";
                this.disabled = false;
                document.getElementById('audio-result-container').classList.remove('hidden');
                // Simulate identification result
                document.getElementById('identified-audio-species').textContent = "Perereca-macaco (Phyllomedusa sauvagii)";
            }, 3000); // Simulate 3 seconds recording
        });

        let currentSightingSpecies = '';

        // Show modal
        window.showModal = function(modalId, speciesName = '') {
            const modal = document.getElementById(modalId);
            if (speciesName) {
                document.getElementById('modal-species-name').textContent = speciesName;
                currentSightingSpecies = speciesName;
            }
            modal.style.display = 'flex';
        };

        // Close modal
        window.closeModal = function(modalId) {
            document.getElementById(modalId).style.display = 'none';
        };

        // Show message modal
        function showMessageModal(title, message) {
            document.getElementById('message-modal-title').textContent = title;
            document.getElementById('message-modal-text').textContent = message;
            document.getElementById('message-modal').style.display = 'flex';
        }

        // Save sighting to Firestore
        window.saveSighting = async function() {
            if (!isAuthReady || !db || !auth.currentUser) {
                showMessageModal("Erro", "Autenticação não concluída. Tente novamente.");
                return;
            }

            const species = currentSightingSpecies;
            const location = document.getElementById('sighting-location').value || 'Local Desconhecido';
            const date = new Date().toLocaleString();
            const imageUrl = document.getElementById('image-preview').src === '#' ? '' : document.getElementById('image-preview').src;

            try {
                // Determine the collection path based on user authentication
                const sightingsCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/frog_sightings`);

                await addDoc(sightingsCollectionRef, {
                    speciesName: species,
                    date: date,
                    location: location,
                    imageUrl: imageUrl,
                    timestamp: Date.now() // For ordering
                });
                showMessageModal("Sucesso!", `Avistamento de "${species}" salvo com sucesso!`);
                closeModal('confirm-sighting-modal');
                document.getElementById('sighting-location').value = ''; // Clear input
                document.getElementById('image-preview-container').classList.add('hidden'); // Hide image preview
                document.getElementById('audio-result-container').classList.add('hidden'); // Hide audio result
            } catch (e) {
                console.error("Erro ao adicionar documento: ", e);
                showMessageModal("Erro", "Não foi possível salvar o avistamento. Tente novamente.");
            }
        };

        // Fetch sightings from Firestore in real-time
        async function fetchSightings() {
            if (!isAuthReady || !db || !auth.currentUser) {
                console.log("Firebase não pronto para buscar avistamentos.");
                return;
            }

            const sightingsList = document.getElementById('sightings-list');
            const noSightingsMessage = document.getElementById('no-sightings-message');

            // Determine the collection path based on user authentication
            const sightingsCollectionRef = collection(db, `artifacts/${appId}/users/${userId}/frog_sightings`);
            const q = query(sightingsCollectionRef); // No orderBy to avoid index issues

            onSnapshot(q, (snapshot) => {
                sightingsList.innerHTML = ''; // Clear current list
                if (snapshot.empty) {
                    noSightingsMessage.classList.remove('hidden');
                } else {
                    noSightingsMessage.classList.add('hidden');
                    // Sort locally by timestamp in descending order
                    const sortedDocs = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }))
                                                   .sort((a, b) => b.timestamp - a.timestamp);

                    sortedDocs.forEach((doc) => {
                        const sighting = doc;
                        const sightingCard = `
                            <div class="card p-4 flex items-center space-x-4">
                                ${sighting.imageUrl ? `<img src="${sighting.imageUrl}" alt="${sighting.speciesName}" class="w-20 h-20 object-cover rounded-lg">` : `<div class="w-20 h-20 bg-gray-200 rounded-lg flex items-center justify-center text-gray-500 text-sm">Sem Imagem</div>`}
                                <div class="flex-grow">
                                    <h4 class="text-xl font-semibold text-gray-800">${sighting.speciesName}</h4>
                                    <p class="text-gray-600 text-sm">${sighting.location} - ${sighting.date}</p>
                                </div>
                            </div>
                        `;
                        sightingsList.innerHTML += sightingCard;
                    });
                }
            }, (error) => {
                console.error("Erro ao buscar avistamentos:", error);
                showMessageModal("Erro", "Não foi possível carregar seus avistamentos.");
            });
        }
    </script>
</body>
</html>
